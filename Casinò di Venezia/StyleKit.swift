//
//  StyleKit.swift
//  CasinoVenezia
//
//  Created by Massimo Moro on 01/02/2018.
//  Copyright Â© 2018 CMV Gioco Spa. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//
//  This code was generated by Trial version of PaintCode, therefore cannot be used for commercial purposes.
//



import UIKit

public class StyleKit : NSObject {

    //// Drawing Methods

    @objc dynamic public class func drawIconaDove(frame: CGRect) {
        //// Color Declarations
        let fillColor = UIColor(red: 0.518, green: 0.459, blue: 0.322, alpha: 1.000)

        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 0.50974 * frame.width, y: frame.minY + 0.21761 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.50885 * frame.width, y: frame.minY + 0.21761 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.38227 * frame.width, y: frame.minY + 0.34465 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.43895 * frame.width, y: frame.minY + 0.21761 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.38227 * frame.width, y: frame.minY + 0.27449 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.50885 * frame.width, y: frame.minY + 0.47170 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.38227 * frame.width, y: frame.minY + 0.41482 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.43895 * frame.width, y: frame.minY + 0.47170 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.63543 * frame.width, y: frame.minY + 0.34465 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.57876 * frame.width, y: frame.minY + 0.47170 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.63543 * frame.width, y: frame.minY + 0.41482 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.63541 * frame.width, y: frame.minY + 0.34244 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.63543 * frame.width, y: frame.minY + 0.34391 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.63543 * frame.width, y: frame.minY + 0.34317 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.63543 * frame.width, y: frame.minY + 0.34465 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.51106 * frame.width, y: frame.minY + 0.21763 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.63543 * frame.width, y: frame.minY + 0.27535 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.58010 * frame.width, y: frame.minY + 0.21884 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.50974 * frame.width, y: frame.minY + 0.21761 * frame.height))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: frame.minX + 0.50974 * frame.width, y: frame.minY + 0.43532 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.50974 * frame.width, y: frame.minY + 0.43532 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.42060 * frame.width, y: frame.minY + 0.34585 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.46051 * frame.width, y: frame.minY + 0.43532 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.42060 * frame.width, y: frame.minY + 0.39526 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.50974 * frame.width, y: frame.minY + 0.25638 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.42060 * frame.width, y: frame.minY + 0.29644 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.46051 * frame.width, y: frame.minY + 0.25638 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.59889 * frame.width, y: frame.minY + 0.34585 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.55898 * frame.width, y: frame.minY + 0.25638 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.59889 * frame.width, y: frame.minY + 0.29644 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.59889 * frame.width, y: frame.minY + 0.34585 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.50974 * frame.width, y: frame.minY + 0.43532 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.59889 * frame.width, y: frame.minY + 0.39526 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.55898 * frame.width, y: frame.minY + 0.43532 * frame.height))
        bezier2Path.close()
        fillColor.setFill()
        bezier2Path.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 0.75161 * frame.width, y: frame.minY + 0.10190 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.75161 * frame.width, y: frame.minY + 0.10190 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.26164 * frame.width, y: frame.minY + 0.10190 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.61631 * frame.width, y: frame.minY + -0.03390 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.39694 * frame.width, y: frame.minY + -0.03390 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.22895 * frame.width, y: frame.minY + 0.59039 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.14040 * frame.width, y: frame.minY + 0.22328 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.12525 * frame.width, y: frame.minY + 0.45202 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.50648 * frame.width, y: frame.minY + 0.99300 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.78400 * frame.width, y: frame.minY + 0.59099 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.75191 * frame.width, y: frame.minY + 0.10160 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.88800 * frame.width, y: frame.minY + 0.45202 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.87314 * frame.width, y: frame.minY + 0.22328 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.75161 * frame.width, y: frame.minY + 0.10190 * frame.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: frame.minX + 0.75459 * frame.width, y: frame.minY + 0.57012 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.50677 * frame.width, y: frame.minY + 0.92799 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.25807 * frame.width, y: frame.minY + 0.56922 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.28719 * frame.width, y: frame.minY + 0.12755 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.16418 * frame.width, y: frame.minY + 0.44367 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.17784 * frame.width, y: frame.minY + 0.23849 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.28632 * frame.width, y: frame.minY + 0.12842 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.72544 * frame.width, y: frame.minY + 0.12842 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.40758 * frame.width, y: frame.minY + 0.00671 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.60418 * frame.width, y: frame.minY + 0.00671 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.75429 * frame.width, y: frame.minY + 0.57012 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.83392 * frame.width, y: frame.minY + 0.23729 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.84729 * frame.width, y: frame.minY + 0.44367 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.75459 * frame.width, y: frame.minY + 0.57012 * frame.height))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
    }

    @objc dynamic public class func drawIconaQuando(frame: CGRect ) {
        //// Color Declarations
        let fillColor = UIColor(red: 0.518, green: 0.459, blue: 0.322, alpha: 1.000)
        let strokeColor = UIColor(red: 0.518, green: 0.459, blue: 0.322, alpha: 1.000)


        //// Subframes
        let livello_2: CGRect = CGRect(x: frame.minX + 3.13, y: frame.minY + 2.13, width: frame.width - 6.04, height: frame.height - 6.04)


        //// Livello_2
        //// Livello_1-2
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.00000 * livello_2.height))
        bezierPath.addLine(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.00000 * livello_2.height))
        bezierPath.addCurve(to: CGPoint(x: livello_2.minX + 0.00000 * livello_2.width, y: livello_2.minY + 0.50000 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.22386 * livello_2.width, y: livello_2.minY + 0.00000 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.00000 * livello_2.width, y: livello_2.minY + 0.22386 * livello_2.height))
        bezierPath.addCurve(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 1.00000 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.00000 * livello_2.width, y: livello_2.minY + 0.77614 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.22386 * livello_2.width, y: livello_2.minY + 1.00000 * livello_2.height))
        bezierPath.addCurve(to: CGPoint(x: livello_2.minX + 1.00000 * livello_2.width, y: livello_2.minY + 0.50000 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.77614 * livello_2.width, y: livello_2.minY + 1.00000 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 1.00000 * livello_2.width, y: livello_2.minY + 0.77614 * livello_2.height))
        bezierPath.addLine(to: CGPoint(x: livello_2.minX + 1.00000 * livello_2.width, y: livello_2.minY + 0.50059 * livello_2.height))
        bezierPath.addCurve(to: CGPoint(x: livello_2.minX + 0.49941 * livello_2.width, y: livello_2.minY + 0.00000 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 1.00000 * livello_2.width, y: livello_2.minY + 0.22412 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.77588 * livello_2.width, y: livello_2.minY + 0.00000 * livello_2.height))
        bezierPath.addLine(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.00000 * livello_2.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.96698 * livello_2.height))
        bezierPath.addLine(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.96698 * livello_2.height))
        bezierPath.addCurve(to: CGPoint(x: livello_2.minX + 0.03302 * livello_2.width, y: livello_2.minY + 0.50000 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.24209 * livello_2.width, y: livello_2.minY + 0.96698 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.03302 * livello_2.width, y: livello_2.minY + 0.75791 * livello_2.height))
        bezierPath.addCurve(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.03302 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.03302 * livello_2.width, y: livello_2.minY + 0.24209 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.24209 * livello_2.width, y: livello_2.minY + 0.03302 * livello_2.height))
        bezierPath.addCurve(to: CGPoint(x: livello_2.minX + 0.96698 * livello_2.width, y: livello_2.minY + 0.50000 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.75791 * livello_2.width, y: livello_2.minY + 0.03302 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.96698 * livello_2.width, y: livello_2.minY + 0.24209 * livello_2.height))
        bezierPath.addLine(to: CGPoint(x: livello_2.minX + 0.96698 * livello_2.width, y: livello_2.minY + 0.50000 * livello_2.height))
        bezierPath.addCurve(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.96698 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.96698 * livello_2.width, y: livello_2.minY + 0.75791 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.75791 * livello_2.width, y: livello_2.minY + 0.96698 * livello_2.height))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        strokeColor.setStroke()
        bezierPath.lineWidth = 0.5
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.09965 * livello_2.height))
        bezier2Path.addLine(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.09965 * livello_2.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_2.minX + 0.48349 * livello_2.width, y: livello_2.minY + 0.11616 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.49088 * livello_2.width, y: livello_2.minY + 0.09965 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.48349 * livello_2.width, y: livello_2.minY + 0.10704 * livello_2.height))
        bezier2Path.addLine(to: CGPoint(x: livello_2.minX + 0.48349 * livello_2.width, y: livello_2.minY + 0.49941 * livello_2.height))
        bezier2Path.addLine(to: CGPoint(x: livello_2.minX + 0.23290 * livello_2.width, y: livello_2.minY + 0.49941 * livello_2.height))
        bezier2Path.addLine(to: CGPoint(x: livello_2.minX + 0.23290 * livello_2.width, y: livello_2.minY + 0.49941 * livello_2.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_2.minX + 0.21610 * livello_2.width, y: livello_2.minY + 0.51621 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.22362 * livello_2.width, y: livello_2.minY + 0.49941 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.21610 * livello_2.width, y: livello_2.minY + 0.50693 * livello_2.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_2.minX + 0.23290 * livello_2.width, y: livello_2.minY + 0.53302 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.21610 * livello_2.width, y: livello_2.minY + 0.52550 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.22362 * livello_2.width, y: livello_2.minY + 0.53302 * livello_2.height))
        bezier2Path.addLine(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.53302 * livello_2.height))
        bezier2Path.addLine(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.53302 * livello_2.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_2.minX + 0.51651 * livello_2.width, y: livello_2.minY + 0.51651 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.50912 * livello_2.width, y: livello_2.minY + 0.53302 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.51651 * livello_2.width, y: livello_2.minY + 0.52563 * livello_2.height))
        bezier2Path.addLine(to: CGPoint(x: livello_2.minX + 0.51651 * livello_2.width, y: livello_2.minY + 0.11616 * livello_2.height))
        bezier2Path.addLine(to: CGPoint(x: livello_2.minX + 0.51651 * livello_2.width, y: livello_2.minY + 0.11616 * livello_2.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.09965 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.51651 * livello_2.width, y: livello_2.minY + 0.10704 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.50912 * livello_2.width, y: livello_2.minY + 0.09965 * livello_2.height))
        bezier2Path.close()
        fillColor.setFill()
        bezier2Path.fill()
        strokeColor.setStroke()
        bezier2Path.lineWidth = 0.5
        bezier2Path.stroke()
    }

}
