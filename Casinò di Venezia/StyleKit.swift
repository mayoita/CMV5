//
//  StyleKit.swift
//  CasinoVenezia
//
//  Created by Massimo Moro on 20/02/2018.
//  Copyright Â© 2018 CMV Gioco Spa. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class StyleKit : NSObject {

    //// Cache

    private struct Cache {
        static let oro: UIColor = UIColor(red: 0.518, green: 0.459, blue: 0.322, alpha: 1.000)
        static let bianco: UIColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        static let rosso: UIColor = UIColor(red: 0.888, green: 0.030, blue: 0.030, alpha: 1.000)
        static let nero: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
    }

    //// Colors

    @objc dynamic public class var oro: UIColor { return Cache.oro }
    @objc dynamic public class var bianco: UIColor { return Cache.bianco }
    @objc dynamic public class var rosso: UIColor { return Cache.rosso }
    @objc dynamic public class var nero: UIColor { return Cache.nero }

    //// Drawing Methods

    @objc dynamic public class func drawIconaDove(frame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 100), color: UIColor = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 1.000)) {

        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 0.50974 * frame.width, y: frame.minY + 0.21761 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.50885 * frame.width, y: frame.minY + 0.21761 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.38227 * frame.width, y: frame.minY + 0.34465 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.43895 * frame.width, y: frame.minY + 0.21761 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.38227 * frame.width, y: frame.minY + 0.27449 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.50885 * frame.width, y: frame.minY + 0.47170 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.38227 * frame.width, y: frame.minY + 0.41482 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.43895 * frame.width, y: frame.minY + 0.47170 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.63543 * frame.width, y: frame.minY + 0.34465 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.57876 * frame.width, y: frame.minY + 0.47170 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.63543 * frame.width, y: frame.minY + 0.41482 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.63541 * frame.width, y: frame.minY + 0.34244 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.63543 * frame.width, y: frame.minY + 0.34391 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.63543 * frame.width, y: frame.minY + 0.34317 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.63543 * frame.width, y: frame.minY + 0.34465 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.51106 * frame.width, y: frame.minY + 0.21763 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.63543 * frame.width, y: frame.minY + 0.27535 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.58010 * frame.width, y: frame.minY + 0.21884 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.50974 * frame.width, y: frame.minY + 0.21761 * frame.height))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: frame.minX + 0.50974 * frame.width, y: frame.minY + 0.43532 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.50974 * frame.width, y: frame.minY + 0.43532 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.42060 * frame.width, y: frame.minY + 0.34585 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.46051 * frame.width, y: frame.minY + 0.43532 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.42060 * frame.width, y: frame.minY + 0.39526 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.50974 * frame.width, y: frame.minY + 0.25638 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.42060 * frame.width, y: frame.minY + 0.29644 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.46051 * frame.width, y: frame.minY + 0.25638 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.59889 * frame.width, y: frame.minY + 0.34585 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.55898 * frame.width, y: frame.minY + 0.25638 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.59889 * frame.width, y: frame.minY + 0.29644 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.59889 * frame.width, y: frame.minY + 0.34585 * frame.height))
        bezier2Path.addCurve(to: CGPoint(x: frame.minX + 0.50974 * frame.width, y: frame.minY + 0.43532 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.59889 * frame.width, y: frame.minY + 0.39526 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.55898 * frame.width, y: frame.minY + 0.43532 * frame.height))
        bezier2Path.close()
        color.setFill()
        bezier2Path.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 0.75161 * frame.width, y: frame.minY + 0.10190 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.75161 * frame.width, y: frame.minY + 0.10190 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.26164 * frame.width, y: frame.minY + 0.10190 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.61631 * frame.width, y: frame.minY + -0.03390 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.39694 * frame.width, y: frame.minY + -0.03390 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.22895 * frame.width, y: frame.minY + 0.59039 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.14040 * frame.width, y: frame.minY + 0.22328 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.12525 * frame.width, y: frame.minY + 0.45202 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.50648 * frame.width, y: frame.minY + 0.99300 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.78400 * frame.width, y: frame.minY + 0.59099 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.75191 * frame.width, y: frame.minY + 0.10160 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.88800 * frame.width, y: frame.minY + 0.45202 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.87314 * frame.width, y: frame.minY + 0.22328 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.75161 * frame.width, y: frame.minY + 0.10190 * frame.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: frame.minX + 0.75459 * frame.width, y: frame.minY + 0.57012 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.50677 * frame.width, y: frame.minY + 0.92799 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.25807 * frame.width, y: frame.minY + 0.56922 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.28719 * frame.width, y: frame.minY + 0.12755 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.16418 * frame.width, y: frame.minY + 0.44367 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.17784 * frame.width, y: frame.minY + 0.23849 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.28632 * frame.width, y: frame.minY + 0.12842 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.72544 * frame.width, y: frame.minY + 0.12842 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.40758 * frame.width, y: frame.minY + 0.00671 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.60418 * frame.width, y: frame.minY + 0.00671 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.75429 * frame.width, y: frame.minY + 0.57012 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.83392 * frame.width, y: frame.minY + 0.23729 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.84729 * frame.width, y: frame.minY + 0.44367 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.75459 * frame.width, y: frame.minY + 0.57012 * frame.height))
        bezierPath.close()
        color.setFill()
        bezierPath.fill()
    }

    @objc dynamic public class func drawIconaQuando(frame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 100), color: UIColor = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 1.000)) {


        //// Subframes
        let livello_2: CGRect = CGRect(x: frame.minX + 3.13, y: frame.minY + 2.13, width: frame.width - 6.04, height: frame.height - 6.04)


        //// Livello_2
        //// Livello_1-2
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.00000 * livello_2.height))
        bezierPath.addLine(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.00000 * livello_2.height))
        bezierPath.addCurve(to: CGPoint(x: livello_2.minX + 0.00000 * livello_2.width, y: livello_2.minY + 0.50000 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.22386 * livello_2.width, y: livello_2.minY + 0.00000 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.00000 * livello_2.width, y: livello_2.minY + 0.22386 * livello_2.height))
        bezierPath.addCurve(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 1.00000 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.00000 * livello_2.width, y: livello_2.minY + 0.77614 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.22386 * livello_2.width, y: livello_2.minY + 1.00000 * livello_2.height))
        bezierPath.addCurve(to: CGPoint(x: livello_2.minX + 1.00000 * livello_2.width, y: livello_2.minY + 0.50000 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.77614 * livello_2.width, y: livello_2.minY + 1.00000 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 1.00000 * livello_2.width, y: livello_2.minY + 0.77614 * livello_2.height))
        bezierPath.addLine(to: CGPoint(x: livello_2.minX + 1.00000 * livello_2.width, y: livello_2.minY + 0.50059 * livello_2.height))
        bezierPath.addCurve(to: CGPoint(x: livello_2.minX + 0.49941 * livello_2.width, y: livello_2.minY + 0.00000 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 1.00000 * livello_2.width, y: livello_2.minY + 0.22412 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.77588 * livello_2.width, y: livello_2.minY + 0.00000 * livello_2.height))
        bezierPath.addLine(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.00000 * livello_2.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.96698 * livello_2.height))
        bezierPath.addLine(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.96698 * livello_2.height))
        bezierPath.addCurve(to: CGPoint(x: livello_2.minX + 0.03302 * livello_2.width, y: livello_2.minY + 0.50000 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.24209 * livello_2.width, y: livello_2.minY + 0.96698 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.03302 * livello_2.width, y: livello_2.minY + 0.75791 * livello_2.height))
        bezierPath.addCurve(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.03302 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.03302 * livello_2.width, y: livello_2.minY + 0.24209 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.24209 * livello_2.width, y: livello_2.minY + 0.03302 * livello_2.height))
        bezierPath.addCurve(to: CGPoint(x: livello_2.minX + 0.96698 * livello_2.width, y: livello_2.minY + 0.50000 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.75791 * livello_2.width, y: livello_2.minY + 0.03302 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.96698 * livello_2.width, y: livello_2.minY + 0.24209 * livello_2.height))
        bezierPath.addLine(to: CGPoint(x: livello_2.minX + 0.96698 * livello_2.width, y: livello_2.minY + 0.50000 * livello_2.height))
        bezierPath.addCurve(to: CGPoint(x: livello_2.minX + 0.50000 * livello_2.width, y: livello_2.minY + 0.96698 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.96698 * livello_2.width, y: livello_2.minY + 0.75791 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.75791 * livello_2.width, y: livello_2.minY + 0.96698 * livello_2.height))
        bezierPath.close()
        color.setFill()
        bezierPath.fill()
        color.setStroke()
        bezierPath.lineWidth = 0.5
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: livello_2.minX + 0.49804 * livello_2.width, y: livello_2.minY + 0.10005 * livello_2.height))
        bezier2Path.addLine(to: CGPoint(x: livello_2.minX + 0.49804 * livello_2.width, y: livello_2.minY + 0.10005 * livello_2.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_2.minX + 0.48153 * livello_2.width, y: livello_2.minY + 0.11656 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.48892 * livello_2.width, y: livello_2.minY + 0.10005 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.48153 * livello_2.width, y: livello_2.minY + 0.10744 * livello_2.height))
        bezier2Path.addLine(to: CGPoint(x: livello_2.minX + 0.48153 * livello_2.width, y: livello_2.minY + 0.49981 * livello_2.height))
        bezier2Path.addLine(to: CGPoint(x: livello_2.minX + 0.23094 * livello_2.width, y: livello_2.minY + 0.49981 * livello_2.height))
        bezier2Path.addLine(to: CGPoint(x: livello_2.minX + 0.23094 * livello_2.width, y: livello_2.minY + 0.49981 * livello_2.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_2.minX + 0.21413 * livello_2.width, y: livello_2.minY + 0.51661 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.22166 * livello_2.width, y: livello_2.minY + 0.49981 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.21413 * livello_2.width, y: livello_2.minY + 0.50733 * livello_2.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_2.minX + 0.23094 * livello_2.width, y: livello_2.minY + 0.53342 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.21413 * livello_2.width, y: livello_2.minY + 0.52589 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.22166 * livello_2.width, y: livello_2.minY + 0.53342 * livello_2.height))
        bezier2Path.addLine(to: CGPoint(x: livello_2.minX + 0.49804 * livello_2.width, y: livello_2.minY + 0.53342 * livello_2.height))
        bezier2Path.addLine(to: CGPoint(x: livello_2.minX + 0.49804 * livello_2.width, y: livello_2.minY + 0.53342 * livello_2.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_2.minX + 0.51455 * livello_2.width, y: livello_2.minY + 0.51691 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.50715 * livello_2.width, y: livello_2.minY + 0.53342 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.51455 * livello_2.width, y: livello_2.minY + 0.52603 * livello_2.height))
        bezier2Path.addLine(to: CGPoint(x: livello_2.minX + 0.51455 * livello_2.width, y: livello_2.minY + 0.11656 * livello_2.height))
        bezier2Path.addLine(to: CGPoint(x: livello_2.minX + 0.51455 * livello_2.width, y: livello_2.minY + 0.11656 * livello_2.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_2.minX + 0.49804 * livello_2.width, y: livello_2.minY + 0.10005 * livello_2.height), controlPoint1: CGPoint(x: livello_2.minX + 0.51455 * livello_2.width, y: livello_2.minY + 0.10744 * livello_2.height), controlPoint2: CGPoint(x: livello_2.minX + 0.50715 * livello_2.width, y: livello_2.minY + 0.10005 * livello_2.height))
        bezier2Path.close()
        color.setFill()
        bezier2Path.fill()
        color.setStroke()
        bezier2Path.lineWidth = 0.5
        bezier2Path.stroke()
    }

    @objc dynamic public class func drawEvents(frame: CGRect = CGRect(x: 0, y: 1, width: 97, height: 99), highlited: Bool = true) {
        //// General Declarations
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }


        //// Subframes
        let group: CGRect = CGRect(x: frame.minX + 2.5, y: frame.minY + 0.5, width: frame.width - 2.66, height: frame.height - 1)


        //// Group
        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: group.minX + fastFloor(group.width * 0.14841 + 0.5), y: group.minY + fastFloor(group.height * 0.00000 + 0.5), width: fastFloor(group.width * 0.26501 + 0.5) - fastFloor(group.width * 0.14841 + 0.5), height: fastFloor(group.height * 0.18367 + 0.5) - fastFloor(group.height * 0.00000 + 0.5)))
        StyleKit.bianco.setStroke()
        rectangle2Path.lineWidth = 2
        rectangle2Path.lineJoinStyle = .round
        rectangle2Path.stroke()


        //// Rectangle 4 Drawing
        let rectangle4Path = UIBezierPath()
        rectangle4Path.move(to: CGPoint(x: group.minX + 0.94004 * group.width, y: group.minY + 0.54054 * group.height))
        rectangle4Path.addLine(to: CGPoint(x: group.minX + 0.93438 * group.width, y: group.minY + 0.08434 * group.height))
        rectangle4Path.addLine(to: CGPoint(x: group.minX + 0.83611 * group.width, y: group.minY + 0.08434 * group.height))
        rectangle4Path.move(to: CGPoint(x: group.minX + 0.09381 * group.width, y: group.minY + 0.08108 * group.height))
        rectangle4Path.addLine(to: CGPoint(x: group.minX + 0.00000 * group.width, y: group.minY + 0.08108 * group.height))
        rectangle4Path.addLine(to: CGPoint(x: group.minX + 0.00000 * group.width, y: group.minY + 1.00000 * group.height))
        rectangle4Path.addLine(to: CGPoint(x: group.minX + 0.48384 * group.width, y: group.minY + 1.00000 * group.height))
        rectangle4Path.move(to: CGPoint(x: group.minX + 0.67178 * group.width, y: group.minY + 0.07865 * group.height))
        rectangle4Path.addLine(to: CGPoint(x: group.minX + 0.27798 * group.width, y: group.minY + 0.07865 * group.height))
        StyleKit.bianco.setStroke()
        rectangle4Path.lineWidth = 2
        rectangle4Path.lineCapStyle = .round
        rectangle4Path.lineJoinStyle = .round
        rectangle4Path.stroke()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: group.minX + 0.01284 * group.width, y: group.minY + 0.24495 * group.height))
        bezier6Path.addCurve(to: CGPoint(x: group.minX + 0.93906 * group.width, y: group.minY + 0.24495 * group.height), controlPoint1: CGPoint(x: group.minX + 0.08333 * group.width, y: group.minY + 0.24495 * group.height), controlPoint2: CGPoint(x: group.minX + 0.93906 * group.width, y: group.minY + 0.24495 * group.height))
        UIColor.red.setFill()
        bezier6Path.fill()
        StyleKit.bianco.setStroke()
        bezier6Path.lineWidth = 2
        bezier6Path.stroke()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: group.minX + 0.81379 * group.width, y: group.minY + 0.53783 * group.height))
        bezier7Path.addLine(to: CGPoint(x: group.minX + 0.81379 * group.width, y: group.minY + 0.38183 * group.height))
        bezier7Path.addLine(to: CGPoint(x: group.minX + 0.14126 * group.width, y: group.minY + 0.37822 * group.height))
        bezier7Path.addLine(to: CGPoint(x: group.minX + 0.14126 * group.width, y: group.minY + 0.86284 * group.height))
        bezier7Path.addLine(to: CGPoint(x: group.minX + 0.48687 * group.width, y: group.minY + 0.86284 * group.height))
        bezier7Path.move(to: CGPoint(x: group.minX + 0.32098 * group.width, y: group.minY + 0.37822 * group.height))
        bezier7Path.addCurve(to: CGPoint(x: group.minX + 0.32098 * group.width, y: group.minY + 0.87624 * group.height), controlPoint1: CGPoint(x: group.minX + 0.32098 * group.width, y: group.minY + 0.88748 * group.height), controlPoint2: CGPoint(x: group.minX + 0.32098 * group.width, y: group.minY + 0.87624 * group.height))
        bezier7Path.addLine(to: CGPoint(x: group.minX + 0.32098 * group.width, y: group.minY + 0.37822 * group.height))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: group.minX + 0.48687 * group.width, y: group.minY + 0.37822 * group.height))
        bezier7Path.addCurve(to: CGPoint(x: group.minX + 0.48687 * group.width, y: group.minY + 0.87624 * group.height), controlPoint1: CGPoint(x: group.minX + 0.48687 * group.width, y: group.minY + 0.88765 * group.height), controlPoint2: CGPoint(x: group.minX + 0.48687 * group.width, y: group.minY + 0.87624 * group.height))
        bezier7Path.addLine(to: CGPoint(x: group.minX + 0.48687 * group.width, y: group.minY + 0.37822 * group.height))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: group.minX + 0.65276 * group.width, y: group.minY + 0.37822 * group.height))
        bezier7Path.addLine(to: CGPoint(x: group.minX + 0.65276 * group.width, y: group.minY + 0.55244 * group.height))
        bezier7Path.addLine(to: CGPoint(x: group.minX + 0.65276 * group.width, y: group.minY + 0.37822 * group.height))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: group.minX + 0.14126 * group.width, y: group.minY + 0.53904 * group.height))
        bezier7Path.addCurve(to: CGPoint(x: group.minX + 0.81379 * group.width, y: group.minY + 0.53783 * group.height), controlPoint1: CGPoint(x: group.minX + 0.81991 * group.width, y: group.minY + 0.53904 * group.height), controlPoint2: CGPoint(x: group.minX + 0.81379 * group.width, y: group.minY + 0.53783 * group.height))
        bezier7Path.addLine(to: CGPoint(x: group.minX + 0.14126 * group.width, y: group.minY + 0.53904 * group.height))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: group.minX + 0.15509 * group.width, y: group.minY + 0.69985 * group.height))
        bezier7Path.addCurve(to: CGPoint(x: group.minX + 0.48687 * group.width, y: group.minY + 0.69985 * group.height), controlPoint1: CGPoint(x: group.minX + 0.14126 * group.width, y: group.minY + 0.69985 * group.height), controlPoint2: CGPoint(x: group.minX + 0.48687 * group.width, y: group.minY + 0.69985 * group.height))
        bezier7Path.addLine(to: CGPoint(x: group.minX + 0.15509 * group.width, y: group.minY + 0.69985 * group.height))
        bezier7Path.close()
        StyleKit.bianco.setStroke()
        bezier7Path.lineWidth = 2
        bezier7Path.lineCapStyle = .square
        bezier7Path.stroke()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: group.minX + 0.67047 * group.width, y: group.minY + 0.91216 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.57939 * group.width, y: group.minY + 0.66186 * group.height), controlPoint1: CGPoint(x: group.minX + 0.57341 * group.width, y: group.minY + 0.84209 * group.height), controlPoint2: CGPoint(x: group.minX + 0.51196 * group.width, y: group.minY + 0.75413 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.72152 * group.width, y: group.minY + 0.63150 * group.height), controlPoint1: CGPoint(x: group.minX + 0.62104 * group.width, y: group.minY + 0.61201 * group.height), controlPoint2: CGPoint(x: group.minX + 0.68022 * group.width, y: group.minY + 0.60644 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.77761 * group.width, y: group.minY + 0.69667 * group.height), controlPoint1: CGPoint(x: group.minX + 0.73959 * group.width, y: group.minY + 0.64189 * group.height), controlPoint2: CGPoint(x: group.minX + 0.77058 * group.width, y: group.minY + 0.68496 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.86055 * group.width, y: group.minY + 0.62080 * group.height), controlPoint1: CGPoint(x: group.minX + 0.78708 * group.width, y: group.minY + 0.67912 * group.height), controlPoint2: CGPoint(x: group.minX + 0.81633 * group.width, y: group.minY + 0.62641 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.97467 * group.width, y: group.minY + 0.66186 * group.height), controlPoint1: CGPoint(x: group.minX + 0.91239 * group.width, y: group.minY + 0.60811 * group.height), controlPoint2: CGPoint(x: group.minX + 0.95008 * group.width, y: group.minY + 0.63493 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.88454 * group.width, y: group.minY + 0.90887 * group.height), controlPoint1: CGPoint(x: group.minX + 1.04996 * group.width, y: group.minY + 0.77810 * group.height), controlPoint2: CGPoint(x: group.minX + 0.93842 * group.width, y: group.minY + 0.86608 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.77761 * group.width, y: group.minY + 0.99790 * group.height), controlPoint1: CGPoint(x: group.minX + 0.81522 * group.width, y: group.minY + 0.96786 * group.height), controlPoint2: CGPoint(x: group.minX + 0.77761 * group.width, y: group.minY + 0.99790 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.67047 * group.width, y: group.minY + 0.91216 * group.height), controlPoint1: CGPoint(x: group.minX + 0.77761 * group.width, y: group.minY + 0.99790 * group.height), controlPoint2: CGPoint(x: group.minX + 0.73268 * group.width, y: group.minY + 0.96622 * group.height))
        bezierPath.close()
        StyleKit.bianco.setStroke()
        bezierPath.lineWidth = 2
        bezierPath.lineCapStyle = .round
        bezierPath.stroke()


        if (highlited) {
            //// Bezier 2 Drawing
            let bezier2Path = UIBezierPath()
            bezier2Path.move(to: CGPoint(x: group.minX + 0.67050 * group.width, y: group.minY + 0.91225 * group.height))
            bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.57942 * group.width, y: group.minY + 0.66195 * group.height), controlPoint1: CGPoint(x: group.minX + 0.57343 * group.width, y: group.minY + 0.84218 * group.height), controlPoint2: CGPoint(x: group.minX + 0.51199 * group.width, y: group.minY + 0.75421 * group.height))
            bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.72154 * group.width, y: group.minY + 0.63159 * group.height), controlPoint1: CGPoint(x: group.minX + 0.62106 * group.width, y: group.minY + 0.61210 * group.height), controlPoint2: CGPoint(x: group.minX + 0.68025 * group.width, y: group.minY + 0.60653 * group.height))
            bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.77763 * group.width, y: group.minY + 0.69676 * group.height), controlPoint1: CGPoint(x: group.minX + 0.73962 * group.width, y: group.minY + 0.64198 * group.height), controlPoint2: CGPoint(x: group.minX + 0.77060 * group.width, y: group.minY + 0.68505 * group.height))
            bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.86058 * group.width, y: group.minY + 0.62089 * group.height), controlPoint1: CGPoint(x: group.minX + 0.78711 * group.width, y: group.minY + 0.67920 * group.height), controlPoint2: CGPoint(x: group.minX + 0.81636 * group.width, y: group.minY + 0.62650 * group.height))
            bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.97470 * group.width, y: group.minY + 0.66195 * group.height), controlPoint1: CGPoint(x: group.minX + 0.91242 * group.width, y: group.minY + 0.60820 * group.height), controlPoint2: CGPoint(x: group.minX + 0.95010 * group.width, y: group.minY + 0.63502 * group.height))
            bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.88456 * group.width, y: group.minY + 0.90895 * group.height), controlPoint1: CGPoint(x: group.minX + 1.04998 * group.width, y: group.minY + 0.77819 * group.height), controlPoint2: CGPoint(x: group.minX + 0.93844 * group.width, y: group.minY + 0.86617 * group.height))
            bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.77763 * group.width, y: group.minY + 0.99798 * group.height), controlPoint1: CGPoint(x: group.minX + 0.81524 * group.width, y: group.minY + 0.96795 * group.height), controlPoint2: CGPoint(x: group.minX + 0.77763 * group.width, y: group.minY + 0.99798 * group.height))
            bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.67050 * group.width, y: group.minY + 0.91225 * group.height), controlPoint1: CGPoint(x: group.minX + 0.77763 * group.width, y: group.minY + 0.99798 * group.height), controlPoint2: CGPoint(x: group.minX + 0.73270 * group.width, y: group.minY + 0.96630 * group.height))
            bezier2Path.close()
            StyleKit.rosso.setFill()
            bezier2Path.fill()
            StyleKit.rosso.setStroke()
            bezier2Path.lineWidth = 2
            bezier2Path.lineCapStyle = .round
            bezier2Path.stroke()
        }


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: group.minX + fastFloor(group.width * 0.68903 + 0.5), y: group.minY + fastFloor(group.height * 0.00000 + 0.5), width: fastFloor(group.width * 0.81623 + 0.5) - fastFloor(group.width * 0.68903 + 0.5), height: fastFloor(group.height * 0.18367 + 0.5) - fastFloor(group.height * 0.00000 + 0.5)))
        StyleKit.bianco.setStroke()
        rectanglePath.lineWidth = 2
        rectanglePath.lineJoinStyle = .round
        rectanglePath.stroke()
    }

    @objc dynamic public class func drawMic(frame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 100), color: UIColor = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 1.000), highlited: Bool = true) {

        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: frame.minX + 68.05, y: frame.minY + 20.24))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 68.06, y: frame.minY + 20.83), controlPoint1: CGPoint(x: frame.minX + 68.06, y: frame.minY + 20.24), controlPoint2: CGPoint(x: frame.minX + 68.06, y: frame.minY + 20.44))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 68.06, y: frame.minY + 55.12), controlPoint1: CGPoint(x: frame.minX + 68.06, y: frame.minY + 25.07), controlPoint2: CGPoint(x: frame.minX + 68.06, y: frame.minY + 50.87))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 68.06, y: frame.minY + 55.71), controlPoint1: CGPoint(x: frame.minX + 68.06, y: frame.minY + 55.5), controlPoint2: CGPoint(x: frame.minX + 68.06, y: frame.minY + 55.71))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 50.5, y: frame.minY + 73.44), controlPoint1: CGPoint(x: frame.minX + 67.75, y: frame.minY + 65.56), controlPoint2: CGPoint(x: frame.minX + 60.01, y: frame.minY + 73.44))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 32.95, y: frame.minY + 55.71), controlPoint1: CGPoint(x: frame.minX + 40.99, y: frame.minY + 73.44), controlPoint2: CGPoint(x: frame.minX + 33.25, y: frame.minY + 65.56))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 32.94, y: frame.minY + 55.12), controlPoint1: CGPoint(x: frame.minX + 32.94, y: frame.minY + 55.71), controlPoint2: CGPoint(x: frame.minX + 32.94, y: frame.minY + 55.5))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 32.94, y: frame.minY + 20.83), controlPoint1: CGPoint(x: frame.minX + 32.94, y: frame.minY + 50.87), controlPoint2: CGPoint(x: frame.minX + 32.94, y: frame.minY + 25.07))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 32.94, y: frame.minY + 20.24), controlPoint1: CGPoint(x: frame.minX + 32.94, y: frame.minY + 20.44), controlPoint2: CGPoint(x: frame.minX + 32.94, y: frame.minY + 20.24))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 35.79, y: frame.minY + 10.82), controlPoint1: CGPoint(x: frame.minX + 33.05, y: frame.minY + 16.77), controlPoint2: CGPoint(x: frame.minX + 34.08, y: frame.minY + 13.54))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 50.5, y: frame.minY + 2.5), controlPoint1: CGPoint(x: frame.minX + 38.92, y: frame.minY + 5.81), controlPoint2: CGPoint(x: frame.minX + 44.34, y: frame.minY + 2.5))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 68.05, y: frame.minY + 20.24), controlPoint1: CGPoint(x: frame.minX + 60.01, y: frame.minY + 2.5), controlPoint2: CGPoint(x: frame.minX + 67.75, y: frame.minY + 10.39))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: frame.minX + 74.5, y: frame.minY + 55.71))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 50.5, y: frame.minY + 79.95), controlPoint1: CGPoint(x: frame.minX + 74.5, y: frame.minY + 69.09), controlPoint2: CGPoint(x: frame.minX + 63.75, y: frame.minY + 79.95))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 26.5, y: frame.minY + 55.71), controlPoint1: CGPoint(x: frame.minX + 37.25, y: frame.minY + 79.95), controlPoint2: CGPoint(x: frame.minX + 26.5, y: frame.minY + 69.09))
        bezier5Path.move(to: CGPoint(x: frame.minX + 51.09, y: frame.minY + 79.95))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 51.09, y: frame.minY + 96.5))
        bezier5Path.move(to: CGPoint(x: frame.minX + 39.38, y: frame.minY + 96.5))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 62.79, y: frame.minY + 96.5))
        bezier5Path.move(to: CGPoint(x: frame.minX + 68.65, y: frame.minY + 49.2))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 55.77, y: frame.minY + 49.2))
        bezier5Path.move(to: CGPoint(x: frame.minX + 68.65, y: frame.minY + 37.38))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 55.77, y: frame.minY + 37.38), controlPoint1: CGPoint(x: frame.minX + 55.77, y: frame.minY + 37.38), controlPoint2: CGPoint(x: frame.minX + 55.77, y: frame.minY + 37.38))
        bezier5Path.move(to: CGPoint(x: frame.minX + 68.65, y: frame.minY + 25.56))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 55.77, y: frame.minY + 25.56), controlPoint1: CGPoint(x: frame.minX + 55.72, y: frame.minY + 25.56), controlPoint2: CGPoint(x: frame.minX + 55.77, y: frame.minY + 25.56))
        color.setStroke()
        bezier5Path.lineWidth = 2
        bezier5Path.stroke()


        if (highlited) {
            //// Bezier Drawing
            let bezierPath = UIBezierPath()
            bezierPath.move(to: CGPoint(x: frame.minX + 68.05, y: frame.minY + 20.24))
            bezierPath.addCurve(to: CGPoint(x: frame.minX + 68.06, y: frame.minY + 20.83), controlPoint1: CGPoint(x: frame.minX + 68.06, y: frame.minY + 20.24), controlPoint2: CGPoint(x: frame.minX + 68.06, y: frame.minY + 20.44))
            bezierPath.addCurve(to: CGPoint(x: frame.minX + 68.06, y: frame.minY + 55.12), controlPoint1: CGPoint(x: frame.minX + 68.06, y: frame.minY + 25.07), controlPoint2: CGPoint(x: frame.minX + 68.06, y: frame.minY + 50.87))
            bezierPath.addCurve(to: CGPoint(x: frame.minX + 68.06, y: frame.minY + 55.71), controlPoint1: CGPoint(x: frame.minX + 68.06, y: frame.minY + 55.5), controlPoint2: CGPoint(x: frame.minX + 68.06, y: frame.minY + 55.71))
            bezierPath.addCurve(to: CGPoint(x: frame.minX + 50.5, y: frame.minY + 73.44), controlPoint1: CGPoint(x: frame.minX + 67.75, y: frame.minY + 65.56), controlPoint2: CGPoint(x: frame.minX + 60.01, y: frame.minY + 73.44))
            bezierPath.addCurve(to: CGPoint(x: frame.minX + 32.95, y: frame.minY + 55.71), controlPoint1: CGPoint(x: frame.minX + 40.99, y: frame.minY + 73.44), controlPoint2: CGPoint(x: frame.minX + 33.25, y: frame.minY + 65.56))
            bezierPath.addCurve(to: CGPoint(x: frame.minX + 32.94, y: frame.minY + 55.12), controlPoint1: CGPoint(x: frame.minX + 32.94, y: frame.minY + 55.71), controlPoint2: CGPoint(x: frame.minX + 32.94, y: frame.minY + 55.5))
            bezierPath.addCurve(to: CGPoint(x: frame.minX + 32.94, y: frame.minY + 20.83), controlPoint1: CGPoint(x: frame.minX + 32.94, y: frame.minY + 50.87), controlPoint2: CGPoint(x: frame.minX + 32.94, y: frame.minY + 25.07))
            bezierPath.addCurve(to: CGPoint(x: frame.minX + 32.94, y: frame.minY + 20.24), controlPoint1: CGPoint(x: frame.minX + 32.94, y: frame.minY + 20.44), controlPoint2: CGPoint(x: frame.minX + 32.94, y: frame.minY + 20.24))
            bezierPath.addCurve(to: CGPoint(x: frame.minX + 35.79, y: frame.minY + 10.82), controlPoint1: CGPoint(x: frame.minX + 33.05, y: frame.minY + 16.77), controlPoint2: CGPoint(x: frame.minX + 34.08, y: frame.minY + 13.54))
            bezierPath.addCurve(to: CGPoint(x: frame.minX + 50.5, y: frame.minY + 2.5), controlPoint1: CGPoint(x: frame.minX + 38.92, y: frame.minY + 5.81), controlPoint2: CGPoint(x: frame.minX + 44.34, y: frame.minY + 2.5))
            bezierPath.addCurve(to: CGPoint(x: frame.minX + 68.05, y: frame.minY + 20.24), controlPoint1: CGPoint(x: frame.minX + 60.01, y: frame.minY + 2.5), controlPoint2: CGPoint(x: frame.minX + 67.75, y: frame.minY + 10.39))
            bezierPath.close()
            bezierPath.move(to: CGPoint(x: frame.minX + 74.5, y: frame.minY + 55.71))
            bezierPath.addCurve(to: CGPoint(x: frame.minX + 50.5, y: frame.minY + 79.95), controlPoint1: CGPoint(x: frame.minX + 74.5, y: frame.minY + 69.09), controlPoint2: CGPoint(x: frame.minX + 63.75, y: frame.minY + 79.95))
            bezierPath.addCurve(to: CGPoint(x: frame.minX + 26.5, y: frame.minY + 55.71), controlPoint1: CGPoint(x: frame.minX + 37.25, y: frame.minY + 79.95), controlPoint2: CGPoint(x: frame.minX + 26.5, y: frame.minY + 69.09))
            bezierPath.move(to: CGPoint(x: frame.minX + 51.09, y: frame.minY + 79.95))
            bezierPath.addLine(to: CGPoint(x: frame.minX + 51.09, y: frame.minY + 96.5))
            bezierPath.move(to: CGPoint(x: frame.minX + 39.38, y: frame.minY + 96.5))
            bezierPath.addLine(to: CGPoint(x: frame.minX + 62.79, y: frame.minY + 96.5))
            bezierPath.move(to: CGPoint(x: frame.minX + 68.65, y: frame.minY + 49.2))
            bezierPath.addLine(to: CGPoint(x: frame.minX + 55.77, y: frame.minY + 49.2))
            bezierPath.move(to: CGPoint(x: frame.minX + 68.65, y: frame.minY + 37.38))
            bezierPath.addCurve(to: CGPoint(x: frame.minX + 55.77, y: frame.minY + 37.38), controlPoint1: CGPoint(x: frame.minX + 55.77, y: frame.minY + 37.38), controlPoint2: CGPoint(x: frame.minX + 55.77, y: frame.minY + 37.38))
            bezierPath.move(to: CGPoint(x: frame.minX + 68.65, y: frame.minY + 25.56))
            bezierPath.addCurve(to: CGPoint(x: frame.minX + 55.77, y: frame.minY + 25.56), controlPoint1: CGPoint(x: frame.minX + 55.72, y: frame.minY + 25.56), controlPoint2: CGPoint(x: frame.minX + 55.77, y: frame.minY + 25.56))
            UIColor.red.setStroke()
            bezierPath.lineWidth = 2
            bezierPath.stroke()
        }
    }

    @objc dynamic public class func drawPercentuale(frame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 100), color: UIColor = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 1.000)) {


        //// Subframes
        let livello_12: CGRect = CGRect(x: frame.minX + 5, y: frame.minY + 5, width: frame.width - 10, height: frame.height - 10)


        //// Livello_1-2
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: livello_12.minX + 0.00750 * livello_12.width, y: livello_12.minY + 0.95500 * livello_12.height))
        bezierPath.addLine(to: CGPoint(x: livello_12.minX + 0.95500 * livello_12.width, y: livello_12.minY + 0.00750 * livello_12.height))
        bezierPath.addLine(to: CGPoint(x: livello_12.minX + 0.99208 * livello_12.width, y: livello_12.minY + 0.04458 * livello_12.height))
        bezierPath.addLine(to: CGPoint(x: livello_12.minX + 0.04500 * livello_12.width, y: livello_12.minY + 0.99250 * livello_12.height))
        bezierPath.addLine(to: CGPoint(x: livello_12.minX + 0.00750 * livello_12.width, y: livello_12.minY + 0.95500 * livello_12.height))
        bezierPath.close()
        color.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: livello_12.minX + 0.15792 * livello_12.width, y: livello_12.minY + 0.31583 * livello_12.height))
        bezier2Path.addLine(to: CGPoint(x: livello_12.minX + 0.15792 * livello_12.width, y: livello_12.minY + 0.31583 * livello_12.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_12.minX + 0.31583 * livello_12.width, y: livello_12.minY + 0.15792 * livello_12.height), controlPoint1: CGPoint(x: livello_12.minX + 0.24513 * livello_12.width, y: livello_12.minY + 0.31583 * livello_12.height), controlPoint2: CGPoint(x: livello_12.minX + 0.31583 * livello_12.width, y: livello_12.minY + 0.24513 * livello_12.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_12.minX + 0.15792 * livello_12.width, y: livello_12.minY + 0.00000 * livello_12.height), controlPoint1: CGPoint(x: livello_12.minX + 0.31583 * livello_12.width, y: livello_12.minY + 0.07070 * livello_12.height), controlPoint2: CGPoint(x: livello_12.minX + 0.24513 * livello_12.width, y: livello_12.minY + 0.00000 * livello_12.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_12.minX + 0.00000 * livello_12.width, y: livello_12.minY + 0.15792 * livello_12.height), controlPoint1: CGPoint(x: livello_12.minX + 0.07070 * livello_12.width, y: livello_12.minY + 0.00000 * livello_12.height), controlPoint2: CGPoint(x: livello_12.minX + 0.00000 * livello_12.width, y: livello_12.minY + 0.07070 * livello_12.height))
        bezier2Path.addLine(to: CGPoint(x: livello_12.minX + 0.00000 * livello_12.width, y: livello_12.minY + 0.15750 * livello_12.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_12.minX + 0.15833 * livello_12.width, y: livello_12.minY + 0.31583 * livello_12.height), controlPoint1: CGPoint(x: livello_12.minX + 0.00000 * livello_12.width, y: livello_12.minY + 0.24495 * livello_12.height), controlPoint2: CGPoint(x: livello_12.minX + 0.07089 * livello_12.width, y: livello_12.minY + 0.31583 * livello_12.height))
        bezier2Path.addLine(to: CGPoint(x: livello_12.minX + 0.15792 * livello_12.width, y: livello_12.minY + 0.31583 * livello_12.height))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: livello_12.minX + 0.15792 * livello_12.width, y: livello_12.minY + 0.05250 * livello_12.height))
        bezier2Path.addLine(to: CGPoint(x: livello_12.minX + 0.15792 * livello_12.width, y: livello_12.minY + 0.05250 * livello_12.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_12.minX + 0.26333 * livello_12.width, y: livello_12.minY + 0.15792 * livello_12.height), controlPoint1: CGPoint(x: livello_12.minX + 0.21614 * livello_12.width, y: livello_12.minY + 0.05250 * livello_12.height), controlPoint2: CGPoint(x: livello_12.minX + 0.26333 * livello_12.width, y: livello_12.minY + 0.09970 * livello_12.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_12.minX + 0.15792 * livello_12.width, y: livello_12.minY + 0.26333 * livello_12.height), controlPoint1: CGPoint(x: livello_12.minX + 0.26333 * livello_12.width, y: livello_12.minY + 0.21614 * livello_12.height), controlPoint2: CGPoint(x: livello_12.minX + 0.21614 * livello_12.width, y: livello_12.minY + 0.26333 * livello_12.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_12.minX + 0.05250 * livello_12.width, y: livello_12.minY + 0.15792 * livello_12.height), controlPoint1: CGPoint(x: livello_12.minX + 0.09970 * livello_12.width, y: livello_12.minY + 0.26333 * livello_12.height), controlPoint2: CGPoint(x: livello_12.minX + 0.05250 * livello_12.width, y: livello_12.minY + 0.21614 * livello_12.height))
        bezier2Path.addLine(to: CGPoint(x: livello_12.minX + 0.05250 * livello_12.width, y: livello_12.minY + 0.15792 * livello_12.height))
        bezier2Path.addCurve(to: CGPoint(x: livello_12.minX + 0.15792 * livello_12.width, y: livello_12.minY + 0.05250 * livello_12.height), controlPoint1: CGPoint(x: livello_12.minX + 0.05250 * livello_12.width, y: livello_12.minY + 0.09970 * livello_12.height), controlPoint2: CGPoint(x: livello_12.minX + 0.09970 * livello_12.width, y: livello_12.minY + 0.05250 * livello_12.height))
        bezier2Path.close()
        color.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: livello_12.minX + 0.84208 * livello_12.width, y: livello_12.minY + 0.68417 * livello_12.height))
        bezier3Path.addLine(to: CGPoint(x: livello_12.minX + 0.84208 * livello_12.width, y: livello_12.minY + 0.68417 * livello_12.height))
        bezier3Path.addCurve(to: CGPoint(x: livello_12.minX + 0.68417 * livello_12.width, y: livello_12.minY + 0.84208 * livello_12.height), controlPoint1: CGPoint(x: livello_12.minX + 0.75487 * livello_12.width, y: livello_12.minY + 0.68417 * livello_12.height), controlPoint2: CGPoint(x: livello_12.minX + 0.68417 * livello_12.width, y: livello_12.minY + 0.75487 * livello_12.height))
        bezier3Path.addCurve(to: CGPoint(x: livello_12.minX + 0.84208 * livello_12.width, y: livello_12.minY + 1.00000 * livello_12.height), controlPoint1: CGPoint(x: livello_12.minX + 0.68417 * livello_12.width, y: livello_12.minY + 0.92930 * livello_12.height), controlPoint2: CGPoint(x: livello_12.minX + 0.75487 * livello_12.width, y: livello_12.minY + 1.00000 * livello_12.height))
        bezier3Path.addCurve(to: CGPoint(x: livello_12.minX + 1.00000 * livello_12.width, y: livello_12.minY + 0.84208 * livello_12.height), controlPoint1: CGPoint(x: livello_12.minX + 0.92930 * livello_12.width, y: livello_12.minY + 1.00000 * livello_12.height), controlPoint2: CGPoint(x: livello_12.minX + 1.00000 * livello_12.width, y: livello_12.minY + 0.92930 * livello_12.height))
        bezier3Path.addLine(to: CGPoint(x: livello_12.minX + 1.00000 * livello_12.width, y: livello_12.minY + 0.84208 * livello_12.height))
        bezier3Path.addCurve(to: CGPoint(x: livello_12.minX + 0.84208 * livello_12.width, y: livello_12.minY + 0.68417 * livello_12.height), controlPoint1: CGPoint(x: livello_12.minX + 1.00000 * livello_12.width, y: livello_12.minY + 0.75487 * livello_12.height), controlPoint2: CGPoint(x: livello_12.minX + 0.92930 * livello_12.width, y: livello_12.minY + 0.68417 * livello_12.height))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: livello_12.minX + 0.84208 * livello_12.width, y: livello_12.minY + 0.94750 * livello_12.height))
        bezier3Path.addLine(to: CGPoint(x: livello_12.minX + 0.84208 * livello_12.width, y: livello_12.minY + 0.94750 * livello_12.height))
        bezier3Path.addCurve(to: CGPoint(x: livello_12.minX + 0.73667 * livello_12.width, y: livello_12.minY + 0.84208 * livello_12.height), controlPoint1: CGPoint(x: livello_12.minX + 0.78386 * livello_12.width, y: livello_12.minY + 0.94750 * livello_12.height), controlPoint2: CGPoint(x: livello_12.minX + 0.73667 * livello_12.width, y: livello_12.minY + 0.90030 * livello_12.height))
        bezier3Path.addCurve(to: CGPoint(x: livello_12.minX + 0.84208 * livello_12.width, y: livello_12.minY + 0.73667 * livello_12.height), controlPoint1: CGPoint(x: livello_12.minX + 0.73667 * livello_12.width, y: livello_12.minY + 0.78386 * livello_12.height), controlPoint2: CGPoint(x: livello_12.minX + 0.78386 * livello_12.width, y: livello_12.minY + 0.73667 * livello_12.height))
        bezier3Path.addCurve(to: CGPoint(x: livello_12.minX + 0.94750 * livello_12.width, y: livello_12.minY + 0.84208 * livello_12.height), controlPoint1: CGPoint(x: livello_12.minX + 0.90030 * livello_12.width, y: livello_12.minY + 0.73667 * livello_12.height), controlPoint2: CGPoint(x: livello_12.minX + 0.94750 * livello_12.width, y: livello_12.minY + 0.78386 * livello_12.height))
        bezier3Path.addLine(to: CGPoint(x: livello_12.minX + 0.94750 * livello_12.width, y: livello_12.minY + 0.84208 * livello_12.height))
        bezier3Path.addCurve(to: CGPoint(x: livello_12.minX + 0.84208 * livello_12.width, y: livello_12.minY + 0.94750 * livello_12.height), controlPoint1: CGPoint(x: livello_12.minX + 0.94750 * livello_12.width, y: livello_12.minY + 0.90030 * livello_12.height), controlPoint2: CGPoint(x: livello_12.minX + 0.90030 * livello_12.width, y: livello_12.minY + 0.94750 * livello_12.height))
        bezier3Path.close()
        color.setFill()
        bezier3Path.fill()
    }

    @objc dynamic public class func drawSpeaking(frame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), color: UIColor = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 1.000)) {

        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.66787 * frame.width, y: frame.minY + 0.20778 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.21346 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.20780 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.20978 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.54267 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.25418 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.50191 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.54835 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.54636 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.54835 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.49875 * frame.width, y: frame.minY + 0.71863 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.66499 * frame.width, y: frame.minY + 0.64290 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.59037 * frame.width, y: frame.minY + 0.71863 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.32963 * frame.width, y: frame.minY + 0.54835 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.40713 * frame.width, y: frame.minY + 0.71863 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.33251 * frame.width, y: frame.minY + 0.64290 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.54267 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.54835 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.54636 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.21346 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.50191 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.25422 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.20778 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.20978 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.20778 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.35697 * frame.width, y: frame.minY + 0.11738 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.33064 * frame.width, y: frame.minY + 0.17449 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.34055 * frame.width, y: frame.minY + 0.14352 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.49875 * frame.width, y: frame.minY + 0.03750 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.38717 * frame.width, y: frame.minY + 0.06928 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.43939 * frame.width, y: frame.minY + 0.03750 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.66787 * frame.width, y: frame.minY + 0.20778 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.59037 * frame.width, y: frame.minY + 0.03750 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.66499 * frame.width, y: frame.minY + 0.11323 * frame.height))
        bezier5Path.close()
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.73000 * frame.width, y: frame.minY + 0.54835 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.49875 * frame.width, y: frame.minY + 0.78107 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.73000 * frame.width, y: frame.minY + 0.67688 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.62647 * frame.width, y: frame.minY + 0.78107 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.26750 * frame.width, y: frame.minY + 0.54835 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.37103 * frame.width, y: frame.minY + 0.78107 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.26750 * frame.width, y: frame.minY + 0.67688 * frame.height))
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.50439 * frame.width, y: frame.minY + 0.78107 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.50439 * frame.width, y: frame.minY + 0.94000 * frame.height))
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.39159 * frame.width, y: frame.minY + 0.94000 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.61720 * frame.width, y: frame.minY + 0.94000 * frame.height))
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.67360 * frame.width, y: frame.minY + 0.48591 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.54951 * frame.width, y: frame.minY + 0.48591 * frame.height))
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.67360 * frame.width, y: frame.minY + 0.37239 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.54951 * frame.width, y: frame.minY + 0.37239 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.54951 * frame.width, y: frame.minY + 0.37239 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.54951 * frame.width, y: frame.minY + 0.37239 * frame.height))
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.67360 * frame.width, y: frame.minY + 0.25887 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.54951 * frame.width, y: frame.minY + 0.25887 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.54900 * frame.width, y: frame.minY + 0.25887 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.54951 * frame.width, y: frame.minY + 0.25887 * frame.height))
        color.setStroke()
        bezier5Path.lineWidth = 1
        bezier5Path.stroke()
    }

    @objc dynamic public class func drawSpeak_acceso(frame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200)) {

        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.73000 * frame.width, y: frame.minY + 0.54835 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 120.69, y: frame.minY + 151.18), controlPoint1: CGPoint(x: frame.minX + 0.73000 * frame.width, y: frame.minY + 0.63896 * frame.height), controlPoint2: CGPoint(x: frame.minX + 135.71, y: frame.minY + 143.49))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.49875 * frame.width, y: frame.minY + 0.78107 * frame.height), controlPoint1: CGPoint(x: frame.minX + 114.4, y: frame.minY + 154.4), controlPoint2: CGPoint(x: frame.minX + 0.53643 * frame.width, y: frame.minY + 0.78107 * frame.height))
        bezier5Path.addCurve(to: CGPoint(x: frame.minX + 0.26750 * frame.width, y: frame.minY + 0.54835 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.37103 * frame.width, y: frame.minY + 0.78107 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.26750 * frame.width, y: frame.minY + 0.67688 * frame.height))
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.50439 * frame.width, y: frame.minY + 0.78107 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.50439 * frame.width, y: frame.minY + 0.94000 * frame.height))
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.39159 * frame.width, y: frame.minY + 0.94000 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.61720 * frame.width, y: frame.minY + 0.94000 * frame.height))
        StyleKit.rosso.setStroke()
        bezier5Path.lineWidth = 2
        bezier5Path.stroke()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 0.66787 * frame.width, y: frame.minY + 0.20778 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.21346 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.20780 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.20978 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.54267 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.25418 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.50191 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.54835 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.54636 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.66796 * frame.width, y: frame.minY + 0.54835 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.49875 * frame.width, y: frame.minY + 0.71863 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.66499 * frame.width, y: frame.minY + 0.64290 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.59037 * frame.width, y: frame.minY + 0.71863 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.32963 * frame.width, y: frame.minY + 0.54835 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.40713 * frame.width, y: frame.minY + 0.71863 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.33251 * frame.width, y: frame.minY + 0.64290 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.54267 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.54835 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.54636 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.21346 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.50191 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.25422 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.20778 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.20978 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.32954 * frame.width, y: frame.minY + 0.20778 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.35697 * frame.width, y: frame.minY + 0.11738 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.33064 * frame.width, y: frame.minY + 0.17449 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.34055 * frame.width, y: frame.minY + 0.14352 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.49875 * frame.width, y: frame.minY + 0.03750 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.38717 * frame.width, y: frame.minY + 0.06928 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.43939 * frame.width, y: frame.minY + 0.03750 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.66787 * frame.width, y: frame.minY + 0.20778 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.59037 * frame.width, y: frame.minY + 0.03750 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.66499 * frame.width, y: frame.minY + 0.11323 * frame.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: frame.minX + 0.67360 * frame.width, y: frame.minY + 0.48591 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.54951 * frame.width, y: frame.minY + 0.48591 * frame.height))
        bezierPath.move(to: CGPoint(x: frame.minX + 0.67360 * frame.width, y: frame.minY + 0.37239 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.54951 * frame.width, y: frame.minY + 0.37239 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.54951 * frame.width, y: frame.minY + 0.37239 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.54951 * frame.width, y: frame.minY + 0.37239 * frame.height))
        bezierPath.move(to: CGPoint(x: frame.minX + 0.67360 * frame.width, y: frame.minY + 0.25887 * frame.height))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 0.54951 * frame.width, y: frame.minY + 0.25887 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.54900 * frame.width, y: frame.minY + 0.25887 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.54951 * frame.width, y: frame.minY + 0.25887 * frame.height))
        StyleKit.rosso.setFill()
        bezierPath.fill()
        StyleKit.rosso.setStroke()
        bezierPath.lineWidth = 1
        bezierPath.stroke()
    }

    //// Generated Images

    @objc dynamic public class func imageOfIconaDove(imageSize: CGSize = CGSize(width: 100, height: 100), color: UIColor = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 1.000)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(imageSize, false, 0)
            StyleKit.drawIconaDove(frame: CGRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height), color: color)

        let imageOfIconaDove = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfIconaDove
    }

    @objc dynamic public class func imageOfIconaQuando(imageSize: CGSize = CGSize(width: 100, height: 100), color: UIColor = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 1.000)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(imageSize, false, 0)
            StyleKit.drawIconaQuando(frame: CGRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height), color: color)

        let imageOfIconaQuando = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfIconaQuando
    }

    @objc dynamic public class func imageOfEvents(imageSize: CGSize = CGSize(width: 97, height: 99), highlited: Bool = true) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(imageSize, false, 0)
            StyleKit.drawEvents(frame: CGRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height), highlited: highlited)

        let imageOfEvents = UIGraphicsGetImageFromCurrentImageContext()!.withRenderingMode(.alwaysOriginal)
        UIGraphicsEndImageContext()

        return imageOfEvents
    }

    @objc dynamic public class func imageOfMic(imageSize: CGSize = CGSize(width: 100, height: 100), color: UIColor = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 1.000), highlited: Bool = true) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(imageSize, false, 0)
            StyleKit.drawMic(frame: CGRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height), color: color, highlited: highlited)

        let imageOfMic = UIGraphicsGetImageFromCurrentImageContext()!.withRenderingMode(.alwaysOriginal)
        UIGraphicsEndImageContext()

        return imageOfMic
    }

    @objc dynamic public class func imageOfPercentuale(imageSize: CGSize = CGSize(width: 100, height: 100), color: UIColor = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 1.000)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(imageSize, false, 0)
            StyleKit.drawPercentuale(frame: CGRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height), color: color)

        let imageOfPercentuale = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfPercentuale
    }

    @objc dynamic public class func imageOfSpeaking(imageSize: CGSize = CGSize(width: 200, height: 200), color: UIColor = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 1.000)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(imageSize, false, 0)
            StyleKit.drawSpeaking(frame: CGRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height), color: color)

        let imageOfSpeaking = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfSpeaking
    }

    @objc dynamic public class func imageOfSpeak_acceso(imageSize: CGSize = CGSize(width: 200, height: 200)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(imageSize, false, 0)
            StyleKit.drawSpeak_acceso(frame: CGRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height))

        let imageOfSpeak_acceso = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfSpeak_acceso
    }

}
